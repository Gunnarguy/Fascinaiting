<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Interactive Network Animation</title>
<style>
  body, html {
    margin: 0;
    padding: 0;
    overflow: hidden;
  }
  canvas {
    position: absolute;
    top: 0;
    left: 0;
  }
</style>
</head>
<body>
<canvas id="networkCanvas"></canvas>
<script>
  const canvas = document.getElementById('networkCanvas');
  const context = canvas.getContext('2d');

  let width = canvas.width = window.innerWidth;
  let height = canvas.height = window.innerHeight;
  let particles = [];
  const numParticles = 100;
  const maxDistance = 150;

  class Particle {
    constructor(x, y) {
      this.x = x;
      this.y = y;
      this.velX = (Math.random() - 0.5) * 2;
      this.velY = (Math.random() - 0.5) * 2;
    }

    update() {
      this.x += this.velX;
      this.y += this.velY;
      if(this.x < 0 || this.x > width) this.velX *= -1;
      if(this.y < 0 || this.y > height) this.velY *= -1;
    }

    draw() {
      context.beginPath();
      context.arc(this.x, this.y, 3, 0, Math.PI * 2);
      context.fill();
    }
  }

  for (let i = 0; i < numParticles; i++) {
    particles.push(new Particle(Math.random() * width, Math.random() * height));
  }

  function connectParticles() {
    particles.forEach((particle, index) => {
      for (let i = index + 1; i < particles.length; i++) {
        const dist = Math.hypot(particles[i].x - particle.x, particles[i].y - particle.y);
        if (dist < maxDistance) {
          context.beginPath();
          context.strokeStyle = `rgba(255,255,255,${1 - dist / maxDistance})`;
          context.lineWidth = 1;
          context.moveTo(particle.x, particle.y);
          context.lineTo(particles[i].x, particles[i].y);
          context.stroke();
        }
      }
    });
  }

  function animate() {
    context.clearRect(0, 0, width, height);
    particles.forEach(particle => {
      particle.update();
      particle.draw();
    });
    connectParticles();
    requestAnimationFrame(animate);
  }

  window.addEventListener('resize', () => {
    width = canvas.width = window.innerWidth;
    height = canvas.height = window.innerHeight;
  });

  animate();
</script>
</body>
</html>
